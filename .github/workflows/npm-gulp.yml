name: Build, Package & Deploy

on:
  push:
    branches: [ "master" ]

permissions:
  id-token: write
  contents: read

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      # ----------------------------------
      # 1. SETUP & INSTALLATION
      # ----------------------------------
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      # ----------------------------------
      # 2. BUILD PROCESS
      # ----------------------------------
      - name: Install dependencies
        run: |
          npm ci --production
          npm cache clean --force
        env:
          CI: true

      - name: Run tests
        run: npm test

      - name: Build application
        run: |
          npm run build
          echo "BUILD_VERSION=$(node -p 'require("./package.json").version')-$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # ----------------------------------
      # 3. ARTIFACT PREPARATION
      # ----------------------------------
      - name: Create deployment package
        run: |
          mkdir -p deploy-package
          cp -r build node_modules package.json package-lock.json appspec.yml scripts deploy-package/
          cd deploy-package && zip -r ../app-$BUILD_VERSION.zip .
          echo "DEPLOYMENT_PACKAGE=app-$BUILD_VERSION.zip" >> $GITHUB_ENV

      - name: Verify package contents
        run: |
          unzip -l app-$BUILD_VERSION.zip

      # ----------------------------------
      # 4. AWS DEPLOYMENT
      # ----------------------------------
      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::120569639058:role/github-actions-role
          aws-region: ap-south-1

      - name: Upload to S3
        run: |
          aws s3 cp app-$BUILD_VERSION.zip s3://java-space/build/$DEPLOYMENT_PACKAGE

      - name: Trigger CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name CICD \
            --deployment-group-name DEV-CICD \
            --s3-location bucket=java-space,key=build/$DEPLOYMENT_PACKAGE,bundleType=zip \
            --description "Deploying version $BUILD_VERSION"
